///////////////////////////////////////////////////////////////////////////////
// CPO file generated for model: bin-packing-variant
// Source file: C:/Users/tlai/Desktop/workspace-spyder/sample-cp-optimizer/bin-packing-variant.py
///////////////////////////////////////////////////////////////////////////////

//--- Variables ---
whereItem5 = intVar(6, 7, 10);
whereItem4 = intVar(0, 3, 6, 7, 10);
whereItem3 = intVar(3, 5, 10);
whereItem2 = intVar(1, 4, 10);
whereItem1 = intVar(2, 10);
whereItem0 = intVar(2, 10);
"sizeBin10,d0" = intVar(0..6);
"sizeBin9,d0" = intVar(0..2);
"sizeBin8,d0" = intVar(0..2);
"sizeBin7,d0" = intVar(0..3);
"sizeBin6,d0" = intVar(0..2);
"sizeBin5,d0" = intVar(0..1);
"sizeBin4,d0" = intVar(0..3);
"sizeBin3,d0" = intVar(0..1);
"sizeBin2,d0" = intVar(0..1);
"sizeBin1,d0" = intVar(0..1);
"sizeBin0,d0" = intVar(0..1);
"sizeBin10,d1" = intVar(0..6);
"sizeBin9,d1" = intVar(0..2);
"sizeBin8,d1" = intVar(0..1);
"sizeBin7,d1" = intVar(0..2);
"sizeBin6,d1" = intVar(0..1);
"sizeBin5,d1" = intVar(0..1);
"sizeBin4,d1" = intVar(0..1);
"sizeBin3,d1" = intVar(0..1);
"sizeBin2,d1" = intVar(0..1);
"sizeBin1,d1" = intVar(0..1);
"sizeBin0,d1" = intVar(0..1);

//--- Expressions ---
#line 72 "C:/Users/tlai/Desktop/workspace-spyder/sample-cp-optimizer/bin-packing-variant.py"
_EXP_1 = [1, 1, 1, 1, 1, 1];
_EXP_236 = [whereItem0, whereItem1, whereItem2, whereItem3, whereItem4, whereItem5];
pack(["sizeBin0,d0", "sizeBin1,d0", "sizeBin2,d0", "sizeBin3,d0", "sizeBin4,d0", "sizeBin5,d0", "sizeBin6,d0", "sizeBin7,d0", "sizeBin8,d0", "sizeBin9,d0", "sizeBin10,d0"], _EXP_236, _EXP_1);
pack(["sizeBin0,d1", "sizeBin1,d1", "sizeBin2,d1", "sizeBin3,d1", "sizeBin4,d1", "sizeBin5,d1", "sizeBin6,d1", "sizeBin7,d1", "sizeBin8,d1", "sizeBin9,d1", "sizeBin10,d1"], _EXP_236, _EXP_1);
#line 90
_EXP_237 = sum([whereItem0 == 0, whereItem1 == 0, whereItem2 == 0, whereItem3 == 0, whereItem4 == 0, whereItem5 == 0]);
_EXP_238 = sum([whereItem0 == 1, whereItem1 == 1, whereItem2 == 1, whereItem3 == 1, whereItem4 == 1, whereItem5 == 1]);
_EXP_239 = sum([whereItem0 == 2, whereItem1 == 2, whereItem2 == 2, whereItem3 == 2, whereItem4 == 2, whereItem5 == 2]);
_EXP_240 = sum([whereItem0 == 3, whereItem1 == 3, whereItem2 == 3, whereItem3 == 3, whereItem4 == 3, whereItem5 == 3]);
_EXP_241 = sum([whereItem0 == 4, whereItem1 == 4, whereItem2 == 4, whereItem3 == 4, whereItem4 == 4, whereItem5 == 4]);
_EXP_242 = sum([whereItem0 == 5, whereItem1 == 5, whereItem2 == 5, whereItem3 == 5, whereItem4 == 5, whereItem5 == 5]);
_EXP_243 = sum([whereItem0 == 6, whereItem1 == 6, whereItem2 == 6, whereItem3 == 6, whereItem4 == 6, whereItem5 == 6]);
_EXP_244 = sum([whereItem0 == 7, whereItem1 == 7, whereItem2 == 7, whereItem3 == 7, whereItem4 == 7, whereItem5 == 7]);
_EXP_245 = sum([whereItem0 == 8, whereItem1 == 8, whereItem2 == 8, whereItem3 == 8, whereItem4 == 8, whereItem5 == 8]);
_EXP_246 = sum([whereItem0 == 9, whereItem1 == 9, whereItem2 == 9, whereItem3 == 9, whereItem4 == 9, whereItem5 == 9]);
maximize(1 * (element(_EXP_237 != 0, [1, _EXP_237]) / 10) * (element(_EXP_238 != 0, [1, _EXP_238]) / 10) * (element(_EXP_239 != 0, [1, _EXP_239]) / 10) * (element(_EXP_240 != 0, [1, _EXP_240]) / 10) * (element(_EXP_241 != 0, [1, _EXP_241]) / 10) * (element(_EXP_242 != 0, [1, _EXP_242]) / 10) * (element(_EXP_243 != 0, [1, _EXP_243]) / 10) * (element(_EXP_244 != 0, [1, _EXP_244]) / 10) * (element(_EXP_245 != 0, [1, _EXP_245]) / 10) * (element(_EXP_246 != 0, [1, _EXP_246]) / 10));
